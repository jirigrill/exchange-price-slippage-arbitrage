{"dashboard":
{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "liveNow": true,
  "panels": [
    {
      "datasource": {
        "type": "postgres",
        "uid": "timescaledb"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "text",
                "value": null
              }
            ]
          },
          "unit": "currencyUSD",
          "decimals": 2
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 6,
        "x": 0,
        "y": 0
      },
      "id": 1,
      "options": {
        "colorMode": "none",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.0.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "timescaledb"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT price_usd FROM exchange_prices WHERE exchange_name = 'kraken' ORDER BY timestamp DESC LIMIT 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "price_usd"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "exchange_prices",
          "timeColumn": "timestamp",
          "timeColumnType": "timestamptz",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Kraken BTC/USD",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "timescaledb"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "text",
                "value": null
              }
            ]
          },
          "unit": "currencyUSD",
          "decimals": 2
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 6,
        "x": 6,
        "y": 0
      },
      "id": 2,
      "options": {
        "colorMode": "none",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.0.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "timescaledb"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT price_usd FROM exchange_prices WHERE exchange_name = 'coinmate' ORDER BY timestamp DESC LIMIT 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "price_usd"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "exchange_prices",
          "timeColumn": "timestamp",
          "timeColumnType": "timestamptz",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Coinmate BTC/USD",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "timescaledb"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "text",
                "value": null
              }
            ]
          },
          "unit": "currencyUSD",
          "decimals": 2
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 6,
        "x": 12,
        "y": 0
      },
      "id": 3,
      "options": {
        "colorMode": "none",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.0.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "timescaledb"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT (c.price_usd - k.price_usd) as spread FROM (SELECT price_usd FROM exchange_prices WHERE exchange_name = 'kraken' ORDER BY timestamp DESC LIMIT 1) k CROSS JOIN (SELECT price_usd FROM exchange_prices WHERE exchange_name = 'coinmate' ORDER BY timestamp DESC LIMIT 1) c",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "spread"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "exchange_prices",
          "timeColumn": "timestamp",
          "timeColumnType": "timestamptz",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Price Spread",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "timescaledb"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "text",
                "value": null
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 6,
        "x": 18,
        "y": 0
      },
      "id": 4,
      "options": {
        "colorMode": "none",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.0.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "timescaledb"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT profit_percentage FROM arbitrage_opportunities ORDER BY timestamp DESC LIMIT 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "profit_percentage"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "arbitrage_opportunities",
          "timeColumn": "timestamp",
          "timeColumnType": "timestamptz",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Latest Arbitrage %",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "timescaledb"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "vis": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "text",
                "value": null
              }
            ]
          },
          "unit": "percent",
          "decimals": 3
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "price_spread_pct"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "mode": "fixed",
                  "fixedColor": "purple"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 4
      },
      "id": 5,
      "options": {
        "legend": {
          "calcs": [
            "last",
            "mean",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "timescaledb"
          },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "WITH price_data AS (\n  SELECT \n    time_bucket('1 minute', timestamp) AS time_bucket,\n    exchange_name,\n    AVG(price_usd) as avg_price\n  FROM exchange_prices\n  WHERE $__timeFilter(timestamp)\n  GROUP BY time_bucket, exchange_name\n)\nSELECT \n  time_bucket AS \"time\",\n  'price_spread_pct' as metric,\n  ((MAX(CASE WHEN exchange_name = 'coinmate' THEN avg_price END) - \n    MAX(CASE WHEN exchange_name = 'kraken' THEN avg_price END)) / \n   MAX(CASE WHEN exchange_name = 'kraken' THEN avg_price END)) * 100 as value\nFROM price_data\nGROUP BY time_bucket\nHAVING COUNT(DISTINCT exchange_name) = 2\nORDER BY time_bucket",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "price_usd"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "exchange_prices",
          "timeColumn": "timestamp",
          "timeColumnType": "timestamptz",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Price Spread Percentage Over Time",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "timescaledb"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "vis": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "line"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "yellow",
                "value": 0.1
              },
              {
                "color": "red",
                "value": 1
              }
            ]
          },
          "unit": "currencyUSD",
          "decimals": 2
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "coinmate_vs_kraken"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "mode": "fixed",
                  "fixedColor": "grey"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 12
      },
      "id": 6,
      "options": {
        "legend": {
          "calcs": [
            "last",
            "mean",
            "max"
          ],
          "displayMode": "table",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "timescaledb"
          },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  time_bucket('5 minutes', timestamp) AS \"time\",\n  'coinmate_vs_kraken' as metric,\n  AVG(CASE WHEN exchange_name = 'coinmate' THEN price_usd END) - AVG(CASE WHEN exchange_name = 'kraken' THEN price_usd END) as value\nFROM exchange_prices\nWHERE\n  $__timeFilter(timestamp)\nGROUP BY time_bucket('5 minutes', timestamp)\nHAVING COUNT(DISTINCT exchange_name) = 2\nORDER BY \"time\"",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "exchange_prices",
          "timeColumn": "timestamp",
          "timeColumnType": "timestamptz",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Price Spread Over Time",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "timescaledb"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "points",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "vis": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 8,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "always",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "line"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "text",
                "value": null
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "BUY_on_coinmate"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "mode": "fixed",
                  "fixedColor": "light-green"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STRONG_BUY_coinmate"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "mode": "fixed",
                  "fixedColor": "green"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "SELL_on_coinmate"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "mode": "fixed",
                  "fixedColor": "light-red"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "STRONG_SELL_coinmate"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "mode": "fixed",
                  "fixedColor": "red"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "NEUTRAL"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "mode": "fixed",
                  "fixedColor": "grey"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 12
      },
      "id": 7,
      "options": {
        "legend": {
          "calcs": [
            "count",
            "mean",
            "max"
          ],
          "displayMode": "table",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "timescaledb"
          },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT \n  time_bucket('2 minutes', timestamp) AS \"time\",\n  CASE \n    WHEN ((AVG(CASE WHEN exchange_name = 'coinmate' THEN price_usd END) - \n           AVG(CASE WHEN exchange_name = 'kraken' THEN price_usd END)) / \n          AVG(CASE WHEN exchange_name = 'kraken' THEN price_usd END)) * 100 < -0.05 \n    THEN 'BUY_on_coinmate'\n    WHEN ((AVG(CASE WHEN exchange_name = 'coinmate' THEN price_usd END) - \n           AVG(CASE WHEN exchange_name = 'kraken' THEN price_usd END)) / \n          AVG(CASE WHEN exchange_name = 'kraken' THEN price_usd END)) * 100 > 0.05 \n    THEN 'SELL_on_coinmate'\n    ELSE 'NEUTRAL'\n  END as metric,\n  ABS(((AVG(CASE WHEN exchange_name = 'coinmate' THEN price_usd END) - \n        AVG(CASE WHEN exchange_name = 'kraken' THEN price_usd END)) / \n       AVG(CASE WHEN exchange_name = 'kraken' THEN price_usd END)) * 100) as value\nFROM exchange_prices\nWHERE $__timeFilter(timestamp)\nGROUP BY time_bucket('2 minutes', timestamp)\nHAVING COUNT(DISTINCT exchange_name) = 2\nORDER BY \"time\" DESC\nLIMIT 500",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "profit_percentage"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "exchange_prices",
          "timeColumn": "timestamp",
          "timeColumnType": "timestamptz",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Coinmate Trading Signals (Based on Kraken)",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "timescaledb"
      },
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": "auto",
            "displayMode": "auto"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "short"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "profit_percentage"
            },
            "properties": [
              {
                "id": "unit",
                "value": "percent"
              },
              {
                "id": "custom.displayMode",
                "value": "color-background"
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "red",
                      "value": null
                    },
                    {
                      "color": "yellow",
                      "value": 0.1
                    },
                    {
                      "color": "green",
                      "value": 0.5
                    }
                  ]
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "profit_usd"
            },
            "properties": [
              {
                "id": "unit",
                "value": "currencyUSD"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "buy_price"
            },
            "properties": [
              {
                "id": "unit",
                "value": "currencyUSD"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "sell_price"
            },
            "properties": [
              {
                "id": "unit",
                "value": "currencyUSD"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 20
      },
      "id": 8,
      "options": {
        "showHeader": true
      },
      "pluginVersion": "8.0.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "timescaledb"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "WITH kraken_prices AS (\n  SELECT timestamp, price_usd as kraken_price\n  FROM exchange_prices \n  WHERE exchange_name = 'kraken' AND timestamp >= NOW() - INTERVAL '24 hours'\n),\ncoinmate_prices AS (\n  SELECT timestamp, price_usd as coinmate_price\n  FROM exchange_prices \n  WHERE exchange_name = 'coinmate' AND timestamp >= NOW() - INTERVAL '24 hours'\n),\nprice_comparison AS (\n  SELECT DISTINCT ON (k.timestamp)\n    k.timestamp,\n    k.kraken_price,\n    c.coinmate_price,\n    ((c.coinmate_price - k.kraken_price) / k.kraken_price) * 100 as spread_pct,\n    ABS(c.coinmate_price - k.kraken_price) as spread_usd\n  FROM kraken_prices k\n  JOIN coinmate_prices c ON \n    c.timestamp BETWEEN k.timestamp - INTERVAL '60 seconds' AND k.timestamp + INTERVAL '60 seconds'\n  ORDER BY k.timestamp, ABS(EXTRACT(EPOCH FROM (c.timestamp - k.timestamp)))\n)\nSELECT \n  timestamp,\n  CASE \n    WHEN spread_pct < 0 THEN 'coinmate' \n    ELSE 'kraken'\n  END as buy_exchange,\n  CASE \n    WHEN spread_pct < 0 THEN 'kraken'\n    ELSE 'coinmate' \n  END as sell_exchange,\n  CASE \n    WHEN spread_pct < 0 THEN coinmate_price\n    ELSE kraken_price\n  END as buy_price,\n  CASE \n    WHEN spread_pct < 0 THEN kraken_price\n    ELSE coinmate_price\n  END as sell_price,\n  spread_usd as profit_usd,\n  ABS(spread_pct) as profit_percentage\nFROM price_comparison\nWHERE ABS(spread_pct) > 0.01\nORDER BY timestamp DESC\nLIMIT 100",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "*"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "exchange_prices",
          "timeColumn": "timestamp",
          "timeColumnType": "timestamptz",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Recent Profitable Opportunities (Last 24h)",
      "type": "table"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "timescaledb"
      },
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": "auto",
            "displayMode": "auto"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "short"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "success_rate"
            },
            "properties": [
              {
                "id": "unit",
                "value": "percent"
              },
              {
                "id": "custom.displayMode",
                "value": "color-background"
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "red",
                      "value": null
                    },
                    {
                      "color": "yellow",
                      "value": 80
                    },
                    {
                      "color": "green",
                      "value": 95
                    }
                  ]
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "avg_response_time"
            },
            "properties": [
              {
                "id": "unit",
                "value": "ms"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 6,
        "w": 24,
        "x": 0,
        "y": 28
      },
      "id": 9,
      "options": {
        "showHeader": true
      },
      "pluginVersion": "8.0.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "timescaledb"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  exchange_name,\n  COUNT(*) as total_requests,\n  COUNT(CASE WHEN status = 'active' THEN 1 END) as successful_requests,\n  ROUND((COUNT(CASE WHEN status = 'active' THEN 1 END)::DECIMAL / COUNT(*)) * 100, 2) as success_rate,\n  ROUND(AVG(response_time_ms), 0) as avg_response_time,\n  MAX(timestamp) as last_seen\nFROM exchange_status\nWHERE timestamp >= NOW() - INTERVAL '24 hours'\nGROUP BY exchange_name\nORDER BY success_rate DESC",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "*"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "exchange_status",
          "timeColumn": "timestamp",
          "timeColumnType": "timestamptz",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Exchange Health Status (Last 24h)",
      "type": "table"
    }
  ],
  "refresh": "5s",
  "schemaVersion": 37,
  "style": "dark",
  "tags": [
    "bitcoin",
    "arbitrage",
    "cryptocurrency",
    "monitoring"
  ],
  "templating": {
    "list": []
  },
  "time": {
    "from": "now-6h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Bitcoin Arbitrage Monitor - Overview",
  "uid": "bitcoin-arbitrage",
  "version": 2,
  "weekStart": ""
},"overwrite":true}
